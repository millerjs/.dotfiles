[user]
    name = Joshua Miller
    email = jsmiller@uchicago.edu
	signingkey = 8168AA32
[core]
    editor = emacs
[merge]
    tool = colordiff
# [init]
# 	templatedir = ~/.git-templates
[alias]
	branch-name = rev-parse --abbrev-ref HEAD
	graph = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    dev = checkout develop
    pull = pull --ff-only
    ship = "!if [ $(git branch-name) == 'develop' ] || [ $(git branch-name) == 'master' ]; then echo on $(git branch-name), refusing to ship; else git push origin $(git branch-name); fi"
    forceship = "!if [ $(git branch-name) == 'develop' ] || [ $(git branch-name) == 'master' ]; then echo on $(git branch-name), refusing to ship; else git push -f origin $(git branch-name); fi"
    yank = "!git pull --ff-only origin $(git branch-name)"
    fo = fetch origin
	wip = commit -nam 'wip'
    sync = "!f() { git fo; git rebase -i origin/${1:-develop}; }; f"
    fix = "!f() { git commit -S -nam 'fix'; git rebase -i HEAD~2; }; f"
    uncommit = "!f() { git reset --soft HEAD^; git diff --staged --name-only | xargs git reset HEAD ;}; f"
	hash = "!f() { git log | head -n1 | cut -d' ' -f2 | tee /dev/stderr | tr -d '\n' | pbcpy;}; f"
	v = "!f() { open $( git config --get remote.origin.url | sed -e 's|git@github.com:|https://github.com/|g' ) ;}; f"
	save = commit -S -a -m
	commit = commit -S
[push]
     default = simple
[github]
	user = millerjs
