[user]
    name = Joshua Miller
    email = jsmiller@uchicago.edu
    signingkey = 03D472904FF2EECC
[core]
    editor = emacs -nw
[merge]
    tool = colordiff
[alias]
    branch-name = rev-parse --abbrev-ref HEAD
    recent = "!f() { git for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' | less -R ; }; f"
    graph = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    l = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    rc = checkout release_candidate
    new = "!f() { git commit -p; git stash && git rc && git yank && git checkout -b ${1}; }; f"
    master = checkout master
    ship = "!if [ $(git branch-name) == 'release_candidate' ] || [ $(git branch-name) == 'master' ]; then echo on $(git branch-name), refusing to ship; else git push origin $(git branch-name); fi"
    forceship = "!if [ $(git branch-name) == 'release_candidate' ] || [ $(git branch-name) == 'master' ]; then echo on $(git branch-name), refusing to ship; else git push -f origin $(git branch-name); fi"
    yank = "!git pull --ff-only origin $(git branch-name)"
    fo = fetch origin
    wip = commit -nam 'wip'
    sync = "!f() { git fo; git rebase -i origin/${1:-release_candidate}; }; f"
    fix = "!f() { git commit -nam 'fix'; git rebase -i HEAD~2; }; f"
    hash = "!f() { git log | head -n1 | cut -d' ' -f2 | tee /dev/stderr | tr -d '\n' | pbcopy;}; f"
    peel = "!f() { git reset --soft HEAD^; git diff --staged --name-only | xargs git reset HEAD ;}; f"
    transplant = "!f() { git stash && git checkout ${1} && git stash pop ;}; f"
    v = "!f() { open $( git config --get remote.origin.url | sed -e 's|git@github.com:|https://github.com/|g' ) ;}; f"
    commit = commit -S
    cob = checkout -b
    co = checkout
    ss = stash show -v
    p = commit -p
    diffr = diff origin/release_candidate
    review = "!f() { tmux new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' && tmux swap-pane -s tmux-zoom.0 && tmux select-window -t tmux-zoom && tmux display 'ZOOMED IN'; cdiff -w $(expr $(tput cols) / 2) -s -c always | less -r && git commit -a; tmux last-window && tmux swap-pane -s tmux-zoom.0 && tmux kill-window -t tmux-zoom && tmux display 'ZOOMED OUT'; }; f"

    sign = 'commit -S'
    shipv = "!f() { git ship && git v ;}; f"
    sv = "!f() { git shipv ;}; f"
    continue = rebase --continue
    attribute = blame
    whodunit = blame
    prune = fetch --all --prune
    vacuum = "!f() { git branch -r | awk '{print $1}' | grep -v <(git branch -vv | grep origin) | awk '{print $1}' | cut -d'/' -f2 | xargs git branch -d ;}; f"

[push]
     default = simple
[github]
	user = millerjs
	oauth-token = bd698473e1b254cfd137f40140ecddf7bc404a5d
[color "diff"]
    new = green
[rerere]
    enabled = true
[diff]
    algorithm = patience
